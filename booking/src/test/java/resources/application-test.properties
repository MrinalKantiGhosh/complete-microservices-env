local.server.port=82000

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa

spring.flyway.enabled=false

#Disable discovery
spring.cloud.discovery.enabled = false
eureka.client.enabled=false

spring.redis.host=${embedded.redis.host}
spring.redis.port=${embedded.redis.port}
spring.redis.password=${embedded.redis.password}

# Here I'm using a lib that I've created to facilitate the integration between a Spring Boot App and RabbitMQ
# https://github.com/Tradeshift/spring-rabbitmq-tuning
spring.rabbitmq.custom.shared.enableJsonMessageConverter=true
spring.rabbitmq.custom.shared.autoCreate=true
spring.rabbitmq.custom.shared.concurrentConsumers=1
spring.rabbitmq.custom.shared.maxConcurrentConsumers=1
spring.rabbitmq.custom.shared.host=${embedded.rabbitmq.host}
spring.rabbitmq.custom.shared.port=${embedded.rabbitmq.port}
spring.rabbitmq.custom.shared.username=rabbitmq
spring.rabbitmq.custom.shared.password=rabbitmq

spring.rabbitmq.custom.booking-created.primary=true
spring.rabbitmq.custom.booking-created.ttlRetryMessage=5000
spring.rabbitmq.custom.booking-created.maxRetriesAttempts=5
spring.rabbitmq.custom.booking-created.queueRoutingKey=booking.created
spring.rabbitmq.custom.booking-created.exchange=ex.bus.topic
spring.rabbitmq.custom.booking-created.exchangeType=topic
spring.rabbitmq.custom.booking-created.queue=queue.booking.created

spring.rabbitmq.custom.payment-analyzed.ttlRetryMessage=3000
spring.rabbitmq.custom.payment-analyzed.maxRetriesAttempts=3
spring.rabbitmq.custom.payment-analyzed.queueRoutingKey=payment.analyzed
spring.rabbitmq.custom.payment-analyzed.exchange=ex.financial.topic
spring.rabbitmq.custom.payment-analyzed.exchangeType=topic
spring.rabbitmq.custom.payment-analyzed.queue=queue.payment.analyzed